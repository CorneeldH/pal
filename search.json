[{"path":[]},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://simonpcouch.github.io/pal/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://simonpcouch.github.io/pal/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to pal","title":"Contributing to pal","text":"outlines propose change pal. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://simonpcouch.github.io/pal/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to pal","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://simonpcouch.github.io/pal/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to pal","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://simonpcouch.github.io/pal/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to pal","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"simonpcouch/pal\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://simonpcouch.github.io/pal/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to pal","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://simonpcouch.github.io/pal/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to pal","text":"Please note pal project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://simonpcouch.github.io/pal/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pal authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonpcouch.github.io/pal/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with pal","title":"Getting help with pal","text":"Thanks using pal! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://simonpcouch.github.io/pal/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with pal","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://simonpcouch.github.io/pal/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with pal","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://simonpcouch.github.io/pal/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with pal","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://simonpcouch.github.io/pal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Couch. Author, maintainer.","code":""},{"path":"https://simonpcouch.github.io/pal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S (2024). pal: LLM-driven coding assistants. R package version 0.0.1, https://simonpcouch.github.io/pal/, https://github.com/simonpcouch/pal.","code":"@Manual{,   title = {pal: LLM-driven coding assistants},   author = {Simon Couch},   year = {2024},   note = {R package version 0.0.1, https://simonpcouch.github.io/pal/},   url = {https://github.com/simonpcouch/pal}, }"},{"path":"https://simonpcouch.github.io/pal/index.html","id":"your-pal-","dir":"","previous_headings":"","what":"LLM-driven coding assistants","title":"LLM-driven coding assistants","text":"Pals persistent LLM-driven helpers designed help complete common tasks interactive data analysis, authoring, package development. created, can attached keybinding immediately get work repetitive hard--automate tasks. create pal, simply pass pal() ID pre-defined pal keybinding ’d like attached . example, use cli pal: [!IMPORTANT] Much documentation package aspirational interface likely change rapidly.","code":"pal(\"cli\", \"Ctrl+Shift+C\")"},{"path":"https://simonpcouch.github.io/pal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"LLM-driven coding assistants","text":"can install pal like : , ensure ANTHROPIC_API_KEY set .env. ’d like use LLM Anthropic’s Claude 3.5 Sonnet power pal, see ?pal() set default metadata model.","code":"pak::pak(\"simonpcouch/pal\")"},{"path":"https://simonpcouch.github.io/pal/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"LLM-driven coding assistants","text":"example, cli pal created pal(\"cli\", \"Ctrl+Shift+C\") provides RStudio add-“Convert cli” registered keybinding “Ctrl+Shift+C”. selecting code, press keyboard shortcut wait moment:","code":""},{"path":"https://simonpcouch.github.io/pal/index.html","id":"available-pals","dir":"","previous_headings":"","what":"Available Pals","title":"LLM-driven coding assistants","text":"pre-engineered pals sorts tasks R: Interactive Data Analysis … Quarto / Authoring \"label\": Label code chunks Package development \"cli\": Convert cli \"testthat\": Convert testthat 3 \"roxygen\": Document functions roxygen can also create pals passing custom prompt pal(role).","code":""},{"path":"https://simonpcouch.github.io/pal/reference/dot-stash_last_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Save most recent results to search path — .stash_last_pal","title":"Save most recent results to search path — .stash_last_pal","text":"Save recent results search path","code":""},{"path":"https://simonpcouch.github.io/pal/reference/dot-stash_last_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save most recent results to search path — .stash_last_pal","text":"","code":".stash_last_pal(x, role)"},{"path":"https://simonpcouch.github.io/pal/reference/dot-stash_last_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save most recent results to search path — .stash_last_pal","text":"x pal.","code":""},{"path":"https://simonpcouch.github.io/pal/reference/dot-stash_last_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save most recent results to search path — .stash_last_pal","text":"NULL, invisibly.","code":""},{"path":"https://simonpcouch.github.io/pal/reference/dot-stash_last_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save most recent results to search path — .stash_last_pal","text":"function assign x .last_pal put search path.","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pal: LLM-driven coding assistants — pal-package","title":"pal: LLM-driven coding assistants — pal-package","text":"LLM-driven coding assistants.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/pal/reference/pal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pal: LLM-driven coding assistants — pal-package","text":"Maintainer: Simon Couch simon.couch@posit.co (ORCID)","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pal — pal","title":"Create a pal — pal","text":"Pals persistent LLM-driven helpers designed help complete common tasks interactive data analysis, authoring, package development. created, can attached keybinding immediately get work repetitive hard--automate tasks. create pal, simply pass pal() ID pre-defined pal keybinding like attached . example, use cli pal:","code":"pal(\"cli\", \"Ctrl+Shift+C\")"},{"path":"https://simonpcouch.github.io/pal/reference/pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pal — pal","text":"","code":"pal(   role = NULL,   keybinding = NULL,   fn = getOption(\".pal_fn\", default = \"new_chat_claude\"),   ...,   .ns = \"elmer\" )"},{"path":"https://simonpcouch.github.io/pal/reference/pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pal — pal","text":"role identifier pal prompt. Currently one \"cli\" \"testthat\". keybinding key binding pal. fn new_*() function, likely elmer package. Defaults elmer::new_chat_claude(). set persistent alternative default, set .pal_fn option; see examples . ... Additional arguments fn. system_prompt argument ignored supplied. set persistent defaults, set .pal_args option; see examples . .ns package new_*() function exported .","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a pal — pal","text":"Upon successfully creating pal, function assign result search path .last_pal. point, .pal_cli() RStudio add-\"Convert cli\" know look .last_pal need worry passing cli pal . Anthropic API key (another API key pal_*() options) set package installed, ready using add-R session setup library loading required; addin knows look API credentials call function .pal_cli() .","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a pal — pal","text":"","code":"if (FALSE) { # to create a chat with claude: pal()  # or with OpenAI's 4o-mini: pal(   \"new_chat_openai\",   model = \"gpt-4o-mini\" )  # to set OpenAI's 4o-mini as the default, for example, set the # following options (possibly in your .Rprofile, if you'd like # them to persist across sessions): options(   .pal_fn = \"new_chat_openai\",   .pal_args = list(model = \"gpt-4o-mini\") ) }"},{"path":"https://simonpcouch.github.io/pal/reference/pal_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert erroring code to use cli — pal_chat","title":"Convert erroring code to use cli — pal_chat","text":"help-page documents function pals created pal(\"cli\") apply. cli pals, see pal_cli.","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert erroring code to use cli — pal_chat","text":"","code":"pal_chat(expr, pal = NULL)"},{"path":"https://simonpcouch.github.io/pal/reference/pal_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert erroring code to use cli — pal_chat","text":"expr Lines code raise error, expression. pal pal created pal(\"cli\").","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal_chat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert erroring code to use cli — pal_chat","text":"","code":"if (FALSE) { pal <- pal(\"cli\")  .pal_cli(stop(\"An error message.\")) }"},{"path":"https://simonpcouch.github.io/pal/reference/pal_cli.html","id":null,"dir":"Reference","previous_headings":"","what":"The cli pal — pal_cli","title":"The cli pal — pal_cli","text":"couple years ago, tidyverse team began migrating cli R package raising errors, transitioning away base R (e.g. stop()), rlang (e.g. rlang::abort()), glue, homegrown combinations . cli's new syntax easier work developer visually pleasing user. cases, transitioning simple Finding + Replacing rlang::abort() cli::cli_abort(). others, mess ad-hoc pluralization, paste0()s, glue interpolations, assorted nonsense sort . Total pain, especially thousands upon thousands error messages thrown across tidyverse, r-lib, tidymodels organizations. cli pal helps convert R package use cli error messages.","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal_cli.html","id":"creating-a-cli-pal","dir":"Reference","previous_headings":"","what":"Creating a cli pal","title":"The cli pal — pal_cli","text":"Create cli pal :","code":"pal(\"cli\", \"Ctrl+Shift+C\")"},{"path":"https://simonpcouch.github.io/pal/reference/pal_cli.html","id":"cost","dir":"Reference","previous_headings":"","what":"Cost","title":"The cli pal — pal_cli","text":"system prompt pal includes something like 4,000 tokens. Add (generous) 100 tokens code actually highlighted also sent model looking 4,100 input tokens. model returns approximately number output tokens receives, call 100 output tokens per refactor. time writing (October 2024), default pal model Claude Sonnet 3.5 costs \\$3 per million input tokens $15 per million output tokens. , using default model, pals cost around \\$15 every 1,000 refactored pieces code. GPT-4o Mini, contrast, tend get cli markup classes right return syntactically valid calls cli functions, cost around 75 cents per 1,000 refactored pieces code.","code":""},{"path":"https://simonpcouch.github.io/pal/reference/pal_cli.html","id":"gallery","dir":"Reference","previous_headings":"","what":"Gallery","title":"The cli pal — pal_cli","text":"section includes handful examples \"wild\" generated default model, Claude Sonnet 3.5.   pal_chat() function takes R expression raises condition converts use cli. simplest, one-line message little bit markup:   function knows look recently defined pal, can pass one manually via pal_chat(pal) please. strange vector collapsing funky line breaking:   message probably best lives two separate elements:   Gnarly ad-hoc pluralization:   paste0() wonk:   model instructed return call cli function, erroring code run conditionally can get borked:   Sprintf-style statements issue:","code":"library(pal)  pal(\"cli\") #> #> -- A cli pal using claude-3-5-sonnet-20240620. pal_chat({   rlang::abort(\"`save_pred` can only be used if the initial results saved predictions.\") }) #> cli::cli_abort(\"{.code save_pred} can only be used if the initial results saved predictions.\") pal_chat({   extra_grid_params <- glue::single_quote(extra_grid_params)   extra_grid_params <- glue::glue_collapse(extra_grid_params, sep = \", \")    msg <- glue::glue(     \"The provided `grid` has the following parameter columns that have \",     \"not been marked for tuning by `tune()`: {extra_grid_params}.\"   )    rlang::abort(msg) }) #> cli::cli_abort( #>   \"The provided {.arg grid} has parameter columns that have not been #>    marked for tuning by {.fn tune}: {extra_grid_params}.\" #> ) pal_chat({   rlang::abort(     paste(       \"Some model parameters require finalization but there are recipe\",       \"parameters that require tuning. Please use \",       \"`extract_parameter_set_dials()` to set parameter ranges \",       \"manually and supply the output to the `param_info` argument.\"     )   ) }) #> cli::cli_abort( #>   c( #>     \"Some model parameters require finalization but there are recipe #>      parameters that require tuning.\", #>     \"i\" = \"Use {.fn extract_parameter_set_dials} to set parameter ranges #>            manually and supply the output to the {.arg param_info} argument.\" #>   ) #> ) pal_chat({   msg <- \"Creating pre-processing data to finalize unknown parameter\"   unk_names <- pset$id[unk]   if (length(unk_names) == 1) {     msg <- paste0(msg, \": \", unk_names)   } else {     msg <- paste0(msg, \"s: \", paste0(\"'\", unk_names, \"'\", collapse = \", \"))   }   rlang::inform(msg) }) #> cli::cli_inform( #>   \"Creating pre-processing data to finalize unknown parameter{?s}: {unk_names}\" #> ) pal_chat({   rlang::abort(paste0(     \"The workflow has arguments to be tuned that are missing some \",     \"parameter objects: \",     paste0(\"'\", pset$id[!params], \"'\", collapse = \", \")   )) }) #> cli::cli_abort( #>   \"The workflow has arguments to be tuned that are missing some #>    parameter objects: {.val {pset$id[!params]}}\" #> ) pal_chat({ cls <- paste(cls, collapse = \" or \") if (!fine) {   msg <- glue::glue(\"Argument '{deparse(cl$x)}' should be a {cls} or NULL\")   if (!is.null(where)) {     msg <- glue::glue(msg, \" in `{where}`\")   }   rlang::abort(msg) } }) #> cli::cli_abort( #>   \"Argument {.code {deparse(cl$x)}} should be {?a/an} {cls} or {.code NULL}{? #>    in {.fn {where}}}\" #> ) pal_chat({   abort(sprintf(\"No such '%s' function: `%s()`.\", package, name)) }) #> cli::cli_abort(\"No such {.pkg {package}} function: {.fn {name}}.\")"}]
