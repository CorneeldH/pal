% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.R
\name{pal}
\alias{pal}
\title{Create a pal}
\usage{
pal(
  role = NULL,
  keybinding = NULL,
  fn = getOption(".pal_fn", default = "new_chat_claude"),
  ...,
  .ns = "elmer"
)
}
\arguments{
\item{role}{The identifier for a pal prompt. Currently one
of \link[=pal_cli]{"cli"} or \link[=pal_testthat]{"testthat"}.}

\item{keybinding}{A key binding for the pal.}

\item{fn}{A \verb{new_*()} function, likely from the elmer package. Defaults
to \code{\link[elmer:new_chat_claude]{elmer::new_chat_claude()}}. To set a persistent alternative default,
set the \code{.pal_fn} option; see examples below.}

\item{...}{Additional arguments to \code{fn}. The \code{system_prompt} argument will
be ignored if supplied. To set persistent defaults,
set the \code{.pal_args} option; see examples below.}

\item{.ns}{The package that the \verb{new_*()} function is exported from.}
}
\description{
Pals are persistent LLM-driven helpers designed to help you complete common tasks in interactive data analysis, authoring, and package development. Once created, they can be attached to a keybinding and immediately get to work on repetitive but hard-to-automate tasks.

To create a pal, simply pass \code{pal()} the ID of a pre-defined pal and a keybinding you'd like it attached to. For example, to use the cli pal:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{pal("cli", "Ctrl+Shift+C")
}\if{html}{\out{</div>}}
}
\details{
Upon successfully creating a pal, this function will assign the
result to the search path as \code{.last_pal}. At that point,
\code{\link[=.pal_cli]{.pal_cli()}} and the RStudio add-in "Convert to cli" know to look
for \code{.last_pal} and you don't need to worry about passing your cli
pal yourself.

If you have an Anthropic API key (or another API key and the \verb{pal_*()}
options) set and this package installed, you are ready to using the add-in
in any R session with no setup or library loading required; the addin knows
to look for your API credentials and will call both
this function and \code{\link[=.pal_cli]{.pal_cli()}} itself.
}
\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# to create a chat with claude:
pal()

# or with OpenAI's 4o-mini:
pal(
  "new_chat_openai",
  model = "gpt-4o-mini"
)

# to set OpenAI's 4o-mini as the default, for example, set the
# following options (possibly in your .Rprofile, if you'd like
# them to persist across sessions):
options(
  .pal_fn = "new_chat_openai",
  .pal_args = list(model = "gpt-4o-mini")
)
\dontshow{\}) # examplesIf}
}
